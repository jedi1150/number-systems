buildscript {
    ext {
        kotlin_version = '1.6.21'
        core_version = '1.7.0'
        multidex_version = '2.0.1'
        lifecycle_version = '2.4.1'
        compose_version = '1.2.0-beta02'
        navigation_compose_version = '2.4.2'
        constraintlayout_compose_version = '1.0.0'
        datastore_preferences_version = '1.0.0'
        accompanist_version = '0.24.9-beta'
        firebase_bom_version = '30.0.1'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (disabled by default)
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-opt-in=kotlin.Experimental'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}