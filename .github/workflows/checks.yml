name: Checks

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - uses: gradle/wrapper-validation-action@v4
      - name: Create google-services.json file
        run: |
          echo "$GOOGLE_SERVICES_JSON" > app/google-services.json.base64
          base64 -d -i app/google-services.json.base64 > app/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      - name: Build with Gradle
        run: ./gradlew build

  checks:
    name: Checks
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - uses: gradle/wrapper-validation-action@v4
      - name: Check lint
        run: ./gradlew lint
      - name: Check binary compatibility
        run: ./gradlew :lib:apiCheck
      - name: Upload check reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Unit test reports
          path: |
            **/app/build/reports/
            **/lib/build/reports/

  unit-tests:
    name: Unit tests
    runs-on: macos-latest
    needs: build
    steps:
      - name: Test
        run: ./gradlew :lib:test
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Unit test reports
          path: '**/lib/build/reports/tests/test/index.html'
